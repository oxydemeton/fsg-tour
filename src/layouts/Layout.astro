---
import { ClientRouter } from 'astro:transitions';
interface Props {
	title?: string,
	preloads?: {
		href: string,
		priority: "low" | "auto" | "high",
		rel: "prefetch" | "prelaod" | "prerender",
		as: "font" | "image" | "audio" | "video"
	}[]
}
const { title, preloads } = Astro.props
const isDev = import.meta.env.MODE === "development"
---

<!doctype html>
<html lang="en">
	<head>
		<ClientRouter/>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="https://fsggeldern.de/wp-content/uploads/2020/12/cropped-fsggeldern_icon-32x32.png" />
		<meta name="generator" content={Astro.generator} />
		<link rel="sitemap" href="/sitemap-index.xml" />
		{
			isDev?
				<meta http-equiv="content-security-policy" content="script-src 'self' 'unsafe-inline'; object-src 'none'; img-src 'self' https://fsggeldern.de/;style-src 'self' 'unsafe-inline';upgrade-insecure-requests;"/>
				:<meta http-equiv="content-security-policy" content="script-src 'self'; object-src 'none'; img-src 'self' https://fsggeldern.de/;style-src 'self' 'unsafe-inline';upgrade-insecure-requests;"/>
		}
		<title>{title || "FSG-Tour"}</title>
		{
			preloads?.map(tag=>{
				return <link href={tag.href} rel={tag.rel} fetchpriority={tag.priority} as={tag.as} />
			})
		}
	</head>
	<body>
		<slot />
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
